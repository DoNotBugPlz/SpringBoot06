spring:
#  logging:
#    level:
#      root: warn
  # 配置slq打印日志
#  mybatis-plus:
#    configuration:
#      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  elasticsearch:
    jest:
      uris: http://10.211.55.6:9200/

  data:
    elasticsearch:
      cluster-name: elasticsearch
      cluster-nodes: 10.211.55.6:9301
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://10.211.55.6:3306/mybatis_plus_test?useSSL=false
    username: root
    password: password
    initialSize: 5
      # 最小连接池个数——》已经不再使用，配置了也没效果
    minIdle: 2
    # 最大连接池个数
    maxActive: 20
    # 配置获取连接等待超时的时间，单位毫秒，缺省启用公平锁，并发效率会有所下降
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    # 用来检测连接是否有效的sql，要求是一个查询语句。
    # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
    validationQuery: SELECT 1 FROM DUAL
    # 建议配置为true，不影响性能，并且保证安全性。
    # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnBorrow: false
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 通过别名的方式配置扩展插件，多个英文逗号分隔，常用的插件有：
    # 监控统计用的filter:stat
    # 日志用的filter:log4j
    # 防御sql注入的filter:wall
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    driver-class-name: com.mysql.cj.jdbc.Driver


  redis:
    host: 10.211.55.6

  rabbitmq:
    host: 10.211.55.6
    username: guest
    password: guest
    port: 5672


logging:
  level:
    root: warn
    com:
      atguigu:
        springboot06: debug
#    org:
#      apache:
#        ibatis: debug
#      baomidou:
#        mybatisplus: debug

#  pattern:
#    level: debug




